<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssetsViewExpanderHeader" xml:space="preserve">
    <value>What is AssetsView?</value>
  </data>
  <data name="AssetsViewExpanderText" xml:space="preserve">
    <value>AssetsView is an app for easy currency tracking. We use exchange rate information from the Bank of England.</value>
  </data>
  <data name="ChartExpanderHeader" xml:space="preserve">
    <value>How to use the chart panel? What is it?</value>
  </data>
  <data name="ChartExpanderText" xml:space="preserve">
    <value>A chart is a specific type of data displayed in the chart panel. The existing data type in the AssetsView chart is the current currency. It is very easy to use the chart, you just need to select your favorite currency pair in the "Favorite rates" panel and enable it to show the exchange rate in the "Chart" panel under the "Convert" panel.</value>
  </data>
  <data name="ConvertTitle" xml:space="preserve">
    <value>Convert</value>
  </data>
  <data name="CurrencyConverterExpanderHeader" xml:space="preserve">
    <value>What capabilities does the currency converter offer in the AssetsView?</value>
  </data>
  <data name="CurrencyConverterExpanderText" xml:space="preserve">
    <value>The currency converter in the AssetsView program allows you to convert amounts from one currency to another at currency exchange rates of the Bank of England.</value>
  </data>
  <data name="DashboardRadioButtonToolTipText" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="DashboardShortText" xml:space="preserve">
    <value>Open Dashboard</value>
  </data>
  <data name="DashboardText" xml:space="preserve">
    <value>Open Dashboard</value>
  </data>
  <data name="DeleteFavouriteRatesText" xml:space="preserve">
    <value>Delete all your favorite charts</value>
  </data>
  <data name="FavouriteRatesExpanderHeader" xml:space="preserve">
    <value>How to use the favourite rates panel?</value>
  </data>
  <data name="FavouriteRatesExpanderText" xml:space="preserve">
    <value>You need to click on the add button and add the currency pair you like to your list, after which you can turn it on and off in the chart panel.</value>
  </data>
  <data name="FavouriteRatesTitleText" xml:space="preserve">
    <value>Favourite rates</value>
  </data>
  <data name="HelpRadioButtonToolTipText" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpText" xml:space="preserve">
    <value>Open Help</value>
  </data>
  <data name="HotkeysExpanderHeader" xml:space="preserve">
    <value>How do hotkeys work and how to use them?</value>
  </data>
  <data name="HotkeysExpanderText" xml:space="preserve">
    <value>Hotkeys work in such a way that by pressing, for example, "CTRL + E", you can instantly go to the settings. To use hotkeys, you need to go to the Settings section and enable them by specifying the keyboard shortcuts that are convenient for you.</value>
  </data>
  <data name="HotkeysTitleText" xml:space="preserve">
    <value>Hotkeys settings</value>
  </data>
  <data name="LanguageRadioButtonContent1" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="LanguageRadioButtonContent2" xml:space="preserve">
    <value>Ukrainian</value>
  </data>
  <data name="LanguageShortText" xml:space="preserve">
    <value>Choose the language</value>
  </data>
  <data name="LanguageText" xml:space="preserve">
    <value>Choose the language you are comfortable with</value>
  </data>
  <data name="NoFoundFavouritesText" xml:space="preserve">
    <value>You haven't added any favourite rates yet</value>
  </data>
  <data name="NoMatchesText" xml:space="preserve">
    <value>Nothing was found for your request ¯⁠\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠¯</value>
  </data>
  <data name="OtherSettingsSubTitleText" xml:space="preserve">
    <value>Choose the resolution, theme or language you prefer</value>
  </data>
  <data name="OtherSettingsText" xml:space="preserve">
    <value>Other settings</value>
  </data>
  <data name="PartnerExpanderHeader" xml:space="preserve">
    <value>Is it possible to become our partner?</value>
  </data>
  <data name="PartnerExpanderText" xml:space="preserve">
    <value>We are open for partnership. For more information, please contact us by this email example@mybusiness.org.</value>
  </data>
  <data name="PercentageChangeText" xml:space="preserve">
    <value>Up by 0,00% (0,000000 USD)</value>
  </data>
  <data name="PopularTitle" xml:space="preserve">
    <value>Popular</value>
  </data>
  <data name="QuickSettingsText" xml:space="preserve">
    <value>Quick settings and hotkeys</value>
  </data>
  <data name="RadioButton10Y" xml:space="preserve">
    <value>10Y</value>
  </data>
  <data name="RadioButton1Y" xml:space="preserve">
    <value>1Y</value>
  </data>
  <data name="RadioButton5Y" xml:space="preserve">
    <value>5Y</value>
  </data>
  <data name="ReferenceSubTitleText" xml:space="preserve">
    <value>Answers to your possible questions</value>
  </data>
  <data name="ReferenceText" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="ResolutionShortText" xml:space="preserve">
    <value>Choose the resolution</value>
  </data>
  <data name="ResolutionText" xml:space="preserve">
    <value>Choose the screen resolution that suits you best</value>
  </data>
  <data name="SearchTextBoxText" xml:space="preserve">
    <value>Type a country / currency</value>
  </data>
  <data name="SelectCurrencyText1" xml:space="preserve">
    <value>Select the first currency</value>
  </data>
  <data name="SelectCurrencyText2" xml:space="preserve">
    <value>Select the second currency</value>
  </data>
  <data name="SelectFavouriteRatesTitleText" xml:space="preserve">
    <value>Select favourite rates</value>
  </data>
  <data name="SetHotkeysText" xml:space="preserve">
    <value>Set hotkeys that are convenient for you</value>
  </data>
  <data name="SettingsRadioButtonToolTipText" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsText" xml:space="preserve">
    <value>Open Settings</value>
  </data>
  <data name="SubTitleText" xml:space="preserve">
    <value>Set hotkeys that are convenient for you</value>
  </data>
  <data name="SwapCurrenciesShortText" xml:space="preserve">
    <value>Swap currencies in the converter</value>
  </data>
  <data name="SwapCurrenciesText" xml:space="preserve">
    <value>Swap currencies in the converter</value>
  </data>
  <data name="ThemeRadioButtonContent1" xml:space="preserve">
    <value>Dark theme</value>
  </data>
  <data name="ThemeRadioButtonContent2" xml:space="preserve">
    <value>Light theme</value>
  </data>
  <data name="ThemeShortText" xml:space="preserve">
    <value>Choose the theme</value>
  </data>
  <data name="ThemeText" xml:space="preserve">
    <value>Choose the theme you like</value>
  </data>
</root>